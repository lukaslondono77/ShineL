{"ast":null,"code":"var _jsxFileName = \"/Users/lukasygina/image-share-app-1/client/src/components/CodeEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport Editor from '@monaco-editor/react';\nimport { useProject } from '../context/ProjectContext';\nimport { Box, IconButton, Tooltip, CircularProgress, Chip } from '@mui/material';\nimport { PlayArrow, Save, Close, AutoAwesome } from '@mui/icons-material';\nimport api from '../utils/api';\nimport './CodeEditor.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = ({\n  file\n}) => {\n  _s();\n  const editorRef = useRef(null);\n  const monacoRef = useRef(null);\n  const [code, setCode] = useState((file === null || file === void 0 ? void 0 : file.content) || '');\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [aiEnabled, setAiEnabled] = useState(true);\n  const [isLoadingAI, setIsLoadingAI] = useState(false);\n  const {\n    socket,\n    currentProject,\n    saveFile,\n    executeCode,\n    isExecuting,\n    cursors,\n    setCursors,\n    closeFile\n  } = useProject();\n  const decorationsRef = useRef([]);\n\n  // Update code when file changes\n  useEffect(() => {\n    if (file) {\n      setCode(file.content || '');\n      setHasUnsavedChanges(false);\n    }\n  }, [file === null || file === void 0 ? void 0 : file._id]);\n\n  // AI Autocomplete Function\n  const getAICompletion = useCallback(async (editor, monaco) => {\n    if (!aiEnabled || isLoadingAI) return;\n    const model = editor.getModel();\n    const position = editor.getPosition();\n    const code = model.getValue();\n    setIsLoadingAI(true);\n    try {\n      const response = await api.post('/ai/complete', {\n        code,\n        language: (file === null || file === void 0 ? void 0 : file.language) || 'javascript',\n        cursorPosition: {\n          line: position.lineNumber,\n          column: position.column\n        }\n      });\n      const suggestion = response.data.suggestion;\n      if (suggestion && suggestion.trim()) {\n        // Show inline suggestion (ghost text)\n        const endLineNumber = position.lineNumber;\n        const endColumn = position.column;\n\n        // Insert AI suggestion as ghost text\n        editor.executeEdits('ai-completion', [{\n          range: new monaco.Range(endLineNumber, endColumn, endLineNumber, endColumn),\n          text: suggestion\n        }]);\n\n        // Move cursor to end of insertion\n        const lines = suggestion.split('\\n');\n        const lastLine = lines[lines.length - 1];\n        const newPosition = new monaco.Position(endLineNumber + lines.length - 1, lines.length === 1 ? endColumn + lastLine.length : lastLine.length + 1);\n        editor.setPosition(newPosition);\n        editor.revealPositionInCenter(newPosition);\n      }\n    } catch (error) {\n      console.error('AI completion error:', error);\n    } finally {\n      setIsLoadingAI(false);\n    }\n  }, [file, aiEnabled, isLoadingAI]);\n\n  // Handle editor mount\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n    monacoRef.current = monaco;\n\n    // Add keyboard shortcuts\n    editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyS, handleSave);\n    editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter, handleRun);\n\n    // AI Autocomplete - Ctrl+Space\n    editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.Space, () => getAICompletion(editor, monaco));\n\n    // Register AI completion provider\n    monaco.languages.registerCompletionItemProvider((file === null || file === void 0 ? void 0 : file.language) || 'javascript', {\n      triggerCharacters: ['.', '(', ' '],\n      provideCompletionItems: async (model, position) => {\n        if (!aiEnabled) return {\n          suggestions: []\n        };\n        const code = model.getValue();\n        const word = model.getWordUntilPosition(position);\n        const range = {\n          startLineNumber: position.lineNumber,\n          endLineNumber: position.lineNumber,\n          startColumn: word.startColumn,\n          endColumn: word.endColumn\n        };\n        try {\n          var _response$data$sugges;\n          const response = await api.post('/ai/complete', {\n            code,\n            language: (file === null || file === void 0 ? void 0 : file.language) || 'javascript',\n            cursorPosition: {\n              line: position.lineNumber,\n              column: position.column\n            }\n          });\n          const suggestion = (_response$data$sugges = response.data.suggestion) === null || _response$data$sugges === void 0 ? void 0 : _response$data$sugges.trim();\n          if (suggestion) {\n            return {\n              suggestions: [{\n                label: 'âœ¨ AI Suggestion',\n                kind: monaco.languages.CompletionItemKind.Snippet,\n                insertText: suggestion,\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                range: range,\n                detail: 'AI-powered completion',\n                documentation: suggestion\n              }]\n            };\n          }\n        } catch (error) {\n          console.error('AI provider error:', error);\n        }\n        return {\n          suggestions: []\n        };\n      }\n    });\n\n    // Focus editor\n    editor.focus();\n  };\n\n  // Handle code changes\n  const handleEditorChange = useCallback(value => {\n    setCode(value);\n    setHasUnsavedChanges(true);\n    if (socket && currentProject && file) {\n      var _editorRef$current;\n      // Get the changes from Monaco\n      const model = (_editorRef$current = editorRef.current) === null || _editorRef$current === void 0 ? void 0 : _editorRef$current.getModel();\n      if (!model) return;\n\n      // Emit code change to other users\n      socket.emit('code_change', {\n        projectId: currentProject._id,\n        fileId: file._id,\n        changes: [{\n          range: model.getFullModelRange(),\n          text: value\n        }],\n        version: model.getVersionId()\n      });\n    }\n  }, [socket, currentProject, file]);\n\n  // Handle cursor position changes\n  const handleCursorChange = useCallback(e => {\n    if (!socket || !currentProject || !file) return;\n    const position = e.position;\n    socket.emit('cursor_update', {\n      projectId: currentProject._id,\n      fileId: file._id,\n      position: {\n        line: position.lineNumber,\n        column: position.column\n      }\n    });\n  }, [socket, currentProject, file]);\n\n  // Listen for remote code changes\n  useEffect(() => {\n    if (!socket || !file) return;\n    const handleCodeUpdated = ({\n      fileId,\n      changes,\n      userId,\n      socketId\n    }) => {\n      if (fileId !== file._id || socketId === socket.id) return;\n      const editor = editorRef.current;\n      const monaco = monacoRef.current;\n      if (!editor || !monaco) return;\n\n      // Apply remote changes\n      changes.forEach(change => {\n        const model = editor.getModel();\n        if (model) {\n          const range = new monaco.Range(change.range.startLineNumber, change.range.startColumn, change.range.endLineNumber, change.range.endColumn);\n          model.pushEditOperations([], [{\n            range,\n            text: change.text\n          }], () => null);\n        }\n      });\n    };\n    const handleCursorMoved = ({\n      fileId,\n      userId,\n      socketId,\n      username,\n      position\n    }) => {\n      if (fileId !== file._id || socketId === socket.id) return;\n      setCursors(prev => ({\n        ...prev,\n        [socketId]: {\n          userId,\n          username,\n          position\n        }\n      }));\n\n      // Show cursor decoration\n      const editor = editorRef.current;\n      const monaco = monacoRef.current;\n      if (!editor || !monaco) return;\n\n      // Remove old decorations for this user\n      const oldDecorations = decorationsRef.current.filter(d => d.socketId === socketId);\n      if (oldDecorations.length > 0) {\n        editor.deltaDecorations(oldDecorations.map(d => d.id), []);\n      }\n\n      // Add new cursor decoration\n      const newDecorations = editor.deltaDecorations([], [{\n        range: new monaco.Range(position.line, position.column, position.line, position.column + 1),\n        options: {\n          className: `remote-cursor remote-cursor-${socketId.substr(0, 6)}`,\n          hoverMessage: {\n            value: `**${username}**'s cursor`\n          },\n          stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n        }\n      }]);\n      decorationsRef.current = decorationsRef.current.filter(d => d.socketId !== socketId);\n      decorationsRef.current.push({\n        socketId,\n        id: newDecorations[0]\n      });\n    };\n    socket.on('code_updated', handleCodeUpdated);\n    socket.on('cursor_moved', handleCursorMoved);\n    return () => {\n      socket.off('code_updated', handleCodeUpdated);\n      socket.off('cursor_moved', handleCursorMoved);\n    };\n  }, [socket, file, setCursors]);\n\n  // Add cursor position listener\n  useEffect(() => {\n    const editor = editorRef.current;\n    if (!editor) return;\n    const disposable = editor.onDidChangeCursorPosition(handleCursorChange);\n    return () => disposable.dispose();\n  }, [handleCursorChange]);\n\n  // Save file\n  const handleSave = useCallback(async () => {\n    if (!file || !hasUnsavedChanges || isSaving) return;\n    try {\n      setIsSaving(true);\n      await saveFile(file._id, code);\n      setHasUnsavedChanges(false);\n      console.log('File saved successfully');\n    } catch (error) {\n      console.error('Failed to save file:', error);\n    } finally {\n      setIsSaving(false);\n    }\n  }, [file, code, hasUnsavedChanges, isSaving, saveFile]);\n\n  // Run code\n  const handleRun = useCallback(async () => {\n    if (!file || isExecuting) return;\n    try {\n      await executeCode(code, file.language);\n    } catch (error) {\n      console.error('Failed to execute code:', error);\n    }\n  }, [file, code, isExecuting, executeCode]);\n\n  // Close file\n  const handleClose = () => {\n    if (hasUnsavedChanges) {\n      if (window.confirm('You have unsaved changes. Close anyway?')) {\n        closeFile(file._id);\n      }\n    } else {\n      closeFile(file._id);\n    }\n  };\n  if (!file) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%',\n        color: '#888'\n      },\n      children: \"Select a file to start editing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        bgcolor: '#2d2d2d',\n        borderBottom: '1px solid #1e1e1e',\n        px: 2,\n        py: 0.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#fff',\n            fontSize: '14px'\n          },\n          children: [file.name, hasUnsavedChanges && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#fff'\n            },\n            children: \" \\u2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#888',\n            fontSize: '12px'\n          },\n          children: file.language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          gap: 0.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Save (Ctrl+S)\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: handleSave,\n            disabled: !hasUnsavedChanges || isSaving,\n            sx: {\n              color: hasUnsavedChanges ? '#4CAF50' : '#666'\n            },\n            children: isSaving ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 27\n            }, this) : /*#__PURE__*/_jsxDEV(Save, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Run Code (Ctrl+Enter)\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: handleRun,\n            disabled: isExecuting,\n            sx: {\n              color: '#2196F3'\n            },\n            children: isExecuting ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 30\n            }, this) : /*#__PURE__*/_jsxDEV(PlayArrow, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"Close\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: handleClose,\n            sx: {\n              color: '#666'\n            },\n            children: /*#__PURE__*/_jsxDEV(Close, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        flexGrow: 1,\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        height: \"100%\",\n        language: file.language,\n        value: code,\n        onChange: handleEditorChange,\n        onMount: handleEditorDidMount,\n        theme: \"vs-dark\",\n        options: {\n          fontSize: 14,\n          minimap: {\n            enabled: true\n          },\n          automaticLayout: true,\n          scrollBeyondLastLine: false,\n          wordWrap: 'on',\n          tabSize: 2,\n          insertSpaces: true,\n          formatOnPaste: true,\n          formatOnType: true,\n          suggestOnTriggerCharacters: true,\n          quickSuggestions: true,\n          cursorBlinking: 'smooth',\n          cursorSmoothCaretAnimation: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 344,\n    columnNumber: 5\n  }, this);\n};\n_s(CodeEditor, \"rxCzppcEUyDL/6ncdfC+8SLmZ18=\", false, function () {\n  return [useProject];\n});\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","Editor","useProject","Box","IconButton","Tooltip","CircularProgress","Chip","PlayArrow","Save","Close","AutoAwesome","api","jsxDEV","_jsxDEV","CodeEditor","file","_s","editorRef","monacoRef","code","setCode","content","hasUnsavedChanges","setHasUnsavedChanges","isSaving","setIsSaving","aiEnabled","setAiEnabled","isLoadingAI","setIsLoadingAI","socket","currentProject","saveFile","executeCode","isExecuting","cursors","setCursors","closeFile","decorationsRef","_id","getAICompletion","editor","monaco","model","getModel","position","getPosition","getValue","response","post","language","cursorPosition","line","lineNumber","column","suggestion","data","trim","endLineNumber","endColumn","executeEdits","range","Range","text","lines","split","lastLine","length","newPosition","Position","setPosition","revealPositionInCenter","error","console","handleEditorDidMount","current","addCommand","KeyMod","CtrlCmd","KeyCode","KeyS","handleSave","Enter","handleRun","Space","languages","registerCompletionItemProvider","triggerCharacters","provideCompletionItems","suggestions","word","getWordUntilPosition","startLineNumber","startColumn","_response$data$sugges","label","kind","CompletionItemKind","Snippet","insertText","insertTextRules","CompletionItemInsertTextRule","InsertAsSnippet","detail","documentation","focus","handleEditorChange","value","_editorRef$current","emit","projectId","fileId","changes","getFullModelRange","version","getVersionId","handleCursorChange","e","handleCodeUpdated","userId","socketId","id","forEach","change","pushEditOperations","handleCursorMoved","username","prev","oldDecorations","filter","d","deltaDecorations","map","newDecorations","options","className","substr","hoverMessage","stickiness","TrackedRangeStickiness","NeverGrowsWhenTypingAtEdges","push","on","off","disposable","onDidChangeCursorPosition","dispose","log","handleClose","window","confirm","sx","display","alignItems","justifyContent","height","color","children","fileName","_jsxFileName","columnNumber","flexDirection","bgcolor","borderBottom","px","py","gap","style","fontSize","name","title","size","onClick","disabled","flexGrow","onChange","onMount","theme","minimap","enabled","automaticLayout","scrollBeyondLastLine","wordWrap","tabSize","insertSpaces","formatOnPaste","formatOnType","suggestOnTriggerCharacters","quickSuggestions","cursorBlinking","cursorSmoothCaretAnimation","_c","$RefreshReg$"],"sources":["/Users/lukasygina/image-share-app-1/client/src/components/CodeEditor.js"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport Editor from '@monaco-editor/react';\nimport { useProject } from '../context/ProjectContext';\nimport { Box, IconButton, Tooltip, CircularProgress, Chip } from '@mui/material';\nimport { PlayArrow, Save, Close, AutoAwesome } from '@mui/icons-material';\nimport api from '../utils/api';\nimport './CodeEditor.css';\n\nconst CodeEditor = ({ file }) => {\n  const editorRef = useRef(null);\n  const monacoRef = useRef(null);\n  const [code, setCode] = useState(file?.content || '');\n  const [hasUnsavedChanges, setHasUnsavedChanges] = useState(false);\n  const [isSaving, setIsSaving] = useState(false);\n  const [aiEnabled, setAiEnabled] = useState(true);\n  const [isLoadingAI, setIsLoadingAI] = useState(false);\n  \n  const {\n    socket,\n    currentProject,\n    saveFile,\n    executeCode,\n    isExecuting,\n    cursors,\n    setCursors,\n    closeFile\n  } = useProject();\n\n  const decorationsRef = useRef([]);\n\n  // Update code when file changes\n  useEffect(() => {\n    if (file) {\n      setCode(file.content || '');\n      setHasUnsavedChanges(false);\n    }\n  }, [file?._id]);\n\n  // AI Autocomplete Function\n  const getAICompletion = useCallback(async (editor, monaco) => {\n    if (!aiEnabled || isLoadingAI) return;\n\n    const model = editor.getModel();\n    const position = editor.getPosition();\n    const code = model.getValue();\n\n    setIsLoadingAI(true);\n\n    try {\n      const response = await api.post('/ai/complete', {\n        code,\n        language: file?.language || 'javascript',\n        cursorPosition: {\n          line: position.lineNumber,\n          column: position.column\n        }\n      });\n\n      const suggestion = response.data.suggestion;\n\n      if (suggestion && suggestion.trim()) {\n        // Show inline suggestion (ghost text)\n        const endLineNumber = position.lineNumber;\n        const endColumn = position.column;\n        \n        // Insert AI suggestion as ghost text\n        editor.executeEdits('ai-completion', [{\n          range: new monaco.Range(\n            endLineNumber,\n            endColumn,\n            endLineNumber,\n            endColumn\n          ),\n          text: suggestion\n        }]);\n\n        // Move cursor to end of insertion\n        const lines = suggestion.split('\\n');\n        const lastLine = lines[lines.length - 1];\n        const newPosition = new monaco.Position(\n          endLineNumber + lines.length - 1,\n          lines.length === 1 ? endColumn + lastLine.length : lastLine.length + 1\n        );\n        editor.setPosition(newPosition);\n        editor.revealPositionInCenter(newPosition);\n      }\n    } catch (error) {\n      console.error('AI completion error:', error);\n    } finally {\n      setIsLoadingAI(false);\n    }\n  }, [file, aiEnabled, isLoadingAI]);\n\n  // Handle editor mount\n  const handleEditorDidMount = (editor, monaco) => {\n    editorRef.current = editor;\n    monacoRef.current = monaco;\n\n    // Add keyboard shortcuts\n    editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.KeyS, handleSave);\n    editor.addCommand(monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter, handleRun);\n    \n    // AI Autocomplete - Ctrl+Space\n    editor.addCommand(\n      monaco.KeyMod.CtrlCmd | monaco.KeyCode.Space,\n      () => getAICompletion(editor, monaco)\n    );\n\n    // Register AI completion provider\n    monaco.languages.registerCompletionItemProvider(file?.language || 'javascript', {\n      triggerCharacters: ['.', '(', ' '],\n      provideCompletionItems: async (model, position) => {\n        if (!aiEnabled) return { suggestions: [] };\n\n        const code = model.getValue();\n        const word = model.getWordUntilPosition(position);\n        const range = {\n          startLineNumber: position.lineNumber,\n          endLineNumber: position.lineNumber,\n          startColumn: word.startColumn,\n          endColumn: word.endColumn\n        };\n\n        try {\n          const response = await api.post('/ai/complete', {\n            code,\n            language: file?.language || 'javascript',\n            cursorPosition: {\n              line: position.lineNumber,\n              column: position.column\n            }\n          });\n\n          const suggestion = response.data.suggestion?.trim();\n\n          if (suggestion) {\n            return {\n              suggestions: [{\n                label: 'âœ¨ AI Suggestion',\n                kind: monaco.languages.CompletionItemKind.Snippet,\n                insertText: suggestion,\n                insertTextRules: monaco.languages.CompletionItemInsertTextRule.InsertAsSnippet,\n                range: range,\n                detail: 'AI-powered completion',\n                documentation: suggestion\n              }]\n            };\n          }\n        } catch (error) {\n          console.error('AI provider error:', error);\n        }\n\n        return { suggestions: [] };\n      }\n    });\n    \n    // Focus editor\n    editor.focus();\n  };\n\n  // Handle code changes\n  const handleEditorChange = useCallback((value) => {\n    setCode(value);\n    setHasUnsavedChanges(true);\n\n    if (socket && currentProject && file) {\n      // Get the changes from Monaco\n      const model = editorRef.current?.getModel();\n      if (!model) return;\n\n      // Emit code change to other users\n      socket.emit('code_change', {\n        projectId: currentProject._id,\n        fileId: file._id,\n        changes: [{\n          range: model.getFullModelRange(),\n          text: value\n        }],\n        version: model.getVersionId()\n      });\n    }\n  }, [socket, currentProject, file]);\n\n  // Handle cursor position changes\n  const handleCursorChange = useCallback((e) => {\n    if (!socket || !currentProject || !file) return;\n\n    const position = e.position;\n    socket.emit('cursor_update', {\n      projectId: currentProject._id,\n      fileId: file._id,\n      position: {\n        line: position.lineNumber,\n        column: position.column\n      }\n    });\n  }, [socket, currentProject, file]);\n\n  // Listen for remote code changes\n  useEffect(() => {\n    if (!socket || !file) return;\n\n    const handleCodeUpdated = ({ fileId, changes, userId, socketId }) => {\n      if (fileId !== file._id || socketId === socket.id) return;\n\n      const editor = editorRef.current;\n      const monaco = monacoRef.current;\n      if (!editor || !monaco) return;\n\n      // Apply remote changes\n      changes.forEach(change => {\n        const model = editor.getModel();\n        if (model) {\n          const range = new monaco.Range(\n            change.range.startLineNumber,\n            change.range.startColumn,\n            change.range.endLineNumber,\n            change.range.endColumn\n          );\n          \n          model.pushEditOperations(\n            [],\n            [{ range, text: change.text }],\n            () => null\n          );\n        }\n      });\n    };\n\n    const handleCursorMoved = ({ fileId, userId, socketId, username, position }) => {\n      if (fileId !== file._id || socketId === socket.id) return;\n\n      setCursors(prev => ({\n        ...prev,\n        [socketId]: { userId, username, position }\n      }));\n\n      // Show cursor decoration\n      const editor = editorRef.current;\n      const monaco = monacoRef.current;\n      if (!editor || !monaco) return;\n\n      // Remove old decorations for this user\n      const oldDecorations = decorationsRef.current.filter(d => d.socketId === socketId);\n      if (oldDecorations.length > 0) {\n        editor.deltaDecorations(oldDecorations.map(d => d.id), []);\n      }\n\n      // Add new cursor decoration\n      const newDecorations = editor.deltaDecorations(\n        [],\n        [{\n          range: new monaco.Range(\n            position.line,\n            position.column,\n            position.line,\n            position.column + 1\n          ),\n          options: {\n            className: `remote-cursor remote-cursor-${socketId.substr(0, 6)}`,\n            hoverMessage: { value: `**${username}**'s cursor` },\n            stickiness: monaco.editor.TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges\n          }\n        }]\n      );\n\n      decorationsRef.current = decorationsRef.current.filter(d => d.socketId !== socketId);\n      decorationsRef.current.push({ socketId, id: newDecorations[0] });\n    };\n\n    socket.on('code_updated', handleCodeUpdated);\n    socket.on('cursor_moved', handleCursorMoved);\n\n    return () => {\n      socket.off('code_updated', handleCodeUpdated);\n      socket.off('cursor_moved', handleCursorMoved);\n    };\n  }, [socket, file, setCursors]);\n\n  // Add cursor position listener\n  useEffect(() => {\n    const editor = editorRef.current;\n    if (!editor) return;\n\n    const disposable = editor.onDidChangeCursorPosition(handleCursorChange);\n    return () => disposable.dispose();\n  }, [handleCursorChange]);\n\n  // Save file\n  const handleSave = useCallback(async () => {\n    if (!file || !hasUnsavedChanges || isSaving) return;\n\n    try {\n      setIsSaving(true);\n      await saveFile(file._id, code);\n      setHasUnsavedChanges(false);\n      console.log('File saved successfully');\n    } catch (error) {\n      console.error('Failed to save file:', error);\n    } finally {\n      setIsSaving(false);\n    }\n  }, [file, code, hasUnsavedChanges, isSaving, saveFile]);\n\n  // Run code\n  const handleRun = useCallback(async () => {\n    if (!file || isExecuting) return;\n\n    try {\n      await executeCode(code, file.language);\n    } catch (error) {\n      console.error('Failed to execute code:', error);\n    }\n  }, [file, code, isExecuting, executeCode]);\n\n  // Close file\n  const handleClose = () => {\n    if (hasUnsavedChanges) {\n      if (window.confirm('You have unsaved changes. Close anyway?')) {\n        closeFile(file._id);\n      }\n    } else {\n      closeFile(file._id);\n    }\n  };\n\n  if (!file) {\n    return (\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          height: '100%',\n          color: '#888'\n        }}\n      >\n        Select a file to start editing\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column' }}>\n      {/* File Tab */}\n      <Box\n        sx={{\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          bgcolor: '#2d2d2d',\n          borderBottom: '1px solid #1e1e1e',\n          px: 2,\n          py: 0.5\n        }}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n          <span style={{ color: '#fff', fontSize: '14px' }}>\n            {file.name}\n            {hasUnsavedChanges && <span style={{ color: '#fff' }}> â€¢</span>}\n          </span>\n          <span style={{ color: '#888', fontSize: '12px' }}>\n            {file.language}\n          </span>\n        </Box>\n\n        <Box sx={{ display: 'flex', gap: 0.5 }}>\n          <Tooltip title=\"Save (Ctrl+S)\">\n            <IconButton\n              size=\"small\"\n              onClick={handleSave}\n              disabled={!hasUnsavedChanges || isSaving}\n              sx={{ color: hasUnsavedChanges ? '#4CAF50' : '#666' }}\n            >\n              {isSaving ? <CircularProgress size={18} /> : <Save fontSize=\"small\" />}\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title=\"Run Code (Ctrl+Enter)\">\n            <IconButton\n              size=\"small\"\n              onClick={handleRun}\n              disabled={isExecuting}\n              sx={{ color: '#2196F3' }}\n            >\n              {isExecuting ? <CircularProgress size={18} /> : <PlayArrow fontSize=\"small\" />}\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title=\"Close\">\n            <IconButton\n              size=\"small\"\n              onClick={handleClose}\n              sx={{ color: '#666' }}\n            >\n              <Close fontSize=\"small\" />\n            </IconButton>\n          </Tooltip>\n        </Box>\n      </Box>\n\n      {/* Monaco Editor */}\n      <Box sx={{ flexGrow: 1, position: 'relative' }}>\n        <Editor\n          height=\"100%\"\n          language={file.language}\n          value={code}\n          onChange={handleEditorChange}\n          onMount={handleEditorDidMount}\n          theme=\"vs-dark\"\n          options={{\n            fontSize: 14,\n            minimap: { enabled: true },\n            automaticLayout: true,\n            scrollBeyondLastLine: false,\n            wordWrap: 'on',\n            tabSize: 2,\n            insertSpaces: true,\n            formatOnPaste: true,\n            formatOnType: true,\n            suggestOnTriggerCharacters: true,\n            quickSuggestions: true,\n            cursorBlinking: 'smooth',\n            cursorSmoothCaretAnimation: true\n          }}\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default CodeEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}