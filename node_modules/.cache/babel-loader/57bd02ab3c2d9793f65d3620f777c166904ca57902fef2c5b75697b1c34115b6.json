{"ast":null,"code":"var _jsxFileName = \"/Users/lukasygina/image-share-app-1/client/src/components/Terminal.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Terminal as XTerm } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport 'xterm/css/xterm.css';\nimport { Box, Typography } from '@mui/material';\nimport { useProject } from '../context/ProjectContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Terminal = () => {\n  _s();\n  const terminalRef = useRef(null);\n  const xtermRef = useRef(null);\n  const fitAddonRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n  const {\n    executionOutput,\n    isExecuting\n  } = useProject();\n  useEffect(() => {\n    if (!terminalRef.current) return;\n    let terminal;\n    let fitAddon;\n    try {\n      // Initialize xterm\n      terminal = new XTerm({\n        cursorBlink: false,\n        fontSize: 14,\n        fontFamily: 'Menlo, Monaco, \"Courier New\", monospace',\n        theme: {\n          background: '#1e1e1e',\n          foreground: '#cccccc',\n          cursor: '#cccccc'\n        },\n        rows: 15,\n        cols: 80\n      });\n      fitAddon = new FitAddon();\n      terminal.loadAddon(fitAddon);\n      terminal.open(terminalRef.current);\n      xtermRef.current = terminal;\n      fitAddonRef.current = fitAddon;\n\n      // Wait for DOM to stabilize before fitting\n      setTimeout(() => {\n        try {\n          if (fitAddon && terminal && terminalRef.current) {\n            fitAddon.fit();\n            setIsReady(true);\n\n            // Write welcome message after initialization\n            terminal.writeln('\\x1b[36m╔════════════════════════════════════════╗\\x1b[0m');\n            terminal.writeln('\\x1b[36m║   Collaborative IDE Terminal v1.0     ║\\x1b[0m');\n            terminal.writeln('\\x1b[36m╚════════════════════════════════════════╝\\x1b[0m');\n            terminal.writeln('');\n            terminal.writeln('\\x1b[32mReady to execute code...\\x1b[0m');\n            terminal.writeln('\\x1b[90mPress Ctrl+Enter in the editor to run your code.\\x1b[0m');\n            terminal.writeln('');\n          }\n        } catch (e) {\n          console.warn('Could not fit terminal:', e);\n        }\n      }, 200);\n\n      // Handle resize\n      const handleResize = () => {\n        if (fitAddon && terminal) {\n          try {\n            fitAddon.fit();\n          } catch (e) {\n            // Ignore fit errors during resize\n          }\n        }\n      };\n      window.addEventListener('resize', handleResize);\n      return () => {\n        window.removeEventListener('resize', handleResize);\n        if (terminal) {\n          try {\n            terminal.dispose();\n          } catch (e) {\n            console.warn('Error disposing terminal:', e);\n          }\n        }\n      };\n    } catch (error) {\n      console.error('Error initializing terminal:', error);\n      return () => {};\n    }\n  }, []);\n  useEffect(() => {\n    const terminal = xtermRef.current;\n    if (!terminal || !isReady) return;\n    if (isExecuting) {\n      terminal.clear();\n      terminal.writeln('\\x1b[33m⟳ Executing code...\\x1b[0m');\n      terminal.writeln('');\n    } else if (executionOutput) {\n      var _executionOutput$outp, _executionOutput$outp2, _executionOutput$outp3, _executionOutput$outp4;\n      terminal.clear();\n\n      // Status indicator\n      const statusColor = executionOutput.status === 'completed' ? '32' : '31';\n      const statusText = executionOutput.status === 'completed' ? '✓' : '✗';\n      terminal.writeln(`\\x1b[${statusColor}m${statusText} Execution ${executionOutput.status}\\x1b[0m`);\n      terminal.writeln('');\n\n      // Output\n      if ((_executionOutput$outp = executionOutput.output) !== null && _executionOutput$outp !== void 0 && _executionOutput$outp.stdout) {\n        terminal.writeln('\\x1b[36m[Output]\\x1b[0m');\n        terminal.writeln(executionOutput.output.stdout);\n      }\n\n      // Errors\n      if ((_executionOutput$outp2 = executionOutput.output) !== null && _executionOutput$outp2 !== void 0 && _executionOutput$outp2.stderr) {\n        terminal.writeln('\\x1b[31m[Error]\\x1b[0m');\n        terminal.writeln(executionOutput.output.stderr);\n      }\n      if ((_executionOutput$outp3 = executionOutput.output) !== null && _executionOutput$outp3 !== void 0 && _executionOutput$outp3.error) {\n        terminal.writeln('\\x1b[31m[System Error]\\x1b[0m');\n        terminal.writeln(executionOutput.output.error);\n      }\n      if ((_executionOutput$outp4 = executionOutput.output) !== null && _executionOutput$outp4 !== void 0 && _executionOutput$outp4.compileOutput) {\n        terminal.writeln('\\x1b[33m[Compilation]\\x1b[0m');\n        terminal.writeln(executionOutput.output.compileOutput);\n      }\n\n      // Performance metrics\n      terminal.writeln('');\n      if (executionOutput.executionTime !== undefined) {\n        terminal.writeln(`\\x1b[90mExecution time: ${executionOutput.executionTime}ms\\x1b[0m`);\n      }\n      if (executionOutput.memoryUsed) {\n        terminal.writeln(`\\x1b[90mMemory used: ${(executionOutput.memoryUsed / 1024).toFixed(2)} KB\\x1b[0m`);\n      }\n\n      // Mode indicators\n      if (executionOutput.local) {\n        terminal.writeln('');\n        terminal.writeln('\\x1b[32m✓ Running with local Node.js/Python\\x1b[0m');\n      } else if (executionOutput.mock) {\n        terminal.writeln('');\n        terminal.writeln('\\x1b[33m⚠ Running in mock mode - Judge0 API not configured\\x1b[0m');\n      }\n      terminal.writeln('');\n      terminal.writeln('\\x1b[90m' + '─'.repeat(50) + '\\x1b[0m');\n    }\n  }, [executionOutput, isExecuting, isReady]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      bgcolor: '#1e1e1e'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 1,\n        borderBottom: '1px solid #2d2d2d',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle2\",\n        sx: {\n          color: '#9e9e9e',\n          fontWeight: 500\n        },\n        children: \"TERMINAL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      ref: terminalRef,\n      sx: {\n        flexGrow: 1,\n        p: 1,\n        bgcolor: '#1e1e1e',\n        overflow: 'hidden',\n        '& .xterm': {\n          height: '100%',\n          width: '100%'\n        },\n        '& .xterm-viewport': {\n          overflow: 'hidden'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(Terminal, \"/5o1QROI8C5WEDJKOWJTMoSPxmk=\", false, function () {\n  return [useProject];\n});\n_c = Terminal;\nexport default Terminal;\nvar _c;\n$RefreshReg$(_c, \"Terminal\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Terminal","XTerm","FitAddon","Box","Typography","useProject","jsxDEV","_jsxDEV","_s","terminalRef","xtermRef","fitAddonRef","isReady","setIsReady","executionOutput","isExecuting","current","terminal","fitAddon","cursorBlink","fontSize","fontFamily","theme","background","foreground","cursor","rows","cols","loadAddon","open","setTimeout","fit","writeln","e","console","warn","handleResize","window","addEventListener","removeEventListener","dispose","error","clear","_executionOutput$outp","_executionOutput$outp2","_executionOutput$outp3","_executionOutput$outp4","statusColor","status","statusText","output","stdout","stderr","compileOutput","executionTime","undefined","memoryUsed","toFixed","local","mock","repeat","sx","height","display","flexDirection","bgcolor","children","p","borderBottom","alignItems","justifyContent","variant","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","ref","flexGrow","overflow","width","_c","$RefreshReg$"],"sources":["/Users/lukasygina/image-share-app-1/client/src/components/Terminal.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Terminal as XTerm } from 'xterm';\nimport { FitAddon } from 'xterm-addon-fit';\nimport 'xterm/css/xterm.css';\nimport { Box, Typography } from '@mui/material';\nimport { useProject } from '../context/ProjectContext';\n\nconst Terminal = () => {\n  const terminalRef = useRef(null);\n  const xtermRef = useRef(null);\n  const fitAddonRef = useRef(null);\n  const [isReady, setIsReady] = useState(false);\n  const { executionOutput, isExecuting } = useProject();\n\n  useEffect(() => {\n    if (!terminalRef.current) return;\n\n    let terminal;\n    let fitAddon;\n\n    try {\n      // Initialize xterm\n      terminal = new XTerm({\n        cursorBlink: false,\n        fontSize: 14,\n        fontFamily: 'Menlo, Monaco, \"Courier New\", monospace',\n        theme: {\n          background: '#1e1e1e',\n          foreground: '#cccccc',\n          cursor: '#cccccc'\n        },\n        rows: 15,\n        cols: 80\n      });\n\n      fitAddon = new FitAddon();\n      terminal.loadAddon(fitAddon);\n      terminal.open(terminalRef.current);\n\n      xtermRef.current = terminal;\n      fitAddonRef.current = fitAddon;\n\n      // Wait for DOM to stabilize before fitting\n      setTimeout(() => {\n        try {\n          if (fitAddon && terminal && terminalRef.current) {\n            fitAddon.fit();\n            setIsReady(true);\n            \n            // Write welcome message after initialization\n            terminal.writeln('\\x1b[36m╔════════════════════════════════════════╗\\x1b[0m');\n            terminal.writeln('\\x1b[36m║   Collaborative IDE Terminal v1.0     ║\\x1b[0m');\n            terminal.writeln('\\x1b[36m╚════════════════════════════════════════╝\\x1b[0m');\n            terminal.writeln('');\n            terminal.writeln('\\x1b[32mReady to execute code...\\x1b[0m');\n            terminal.writeln('\\x1b[90mPress Ctrl+Enter in the editor to run your code.\\x1b[0m');\n            terminal.writeln('');\n          }\n        } catch (e) {\n          console.warn('Could not fit terminal:', e);\n        }\n      }, 200);\n\n      // Handle resize\n      const handleResize = () => {\n        if (fitAddon && terminal) {\n          try {\n            fitAddon.fit();\n          } catch (e) {\n            // Ignore fit errors during resize\n          }\n        }\n      };\n\n      window.addEventListener('resize', handleResize);\n\n      return () => {\n        window.removeEventListener('resize', handleResize);\n        if (terminal) {\n          try {\n            terminal.dispose();\n          } catch (e) {\n            console.warn('Error disposing terminal:', e);\n          }\n        }\n      };\n    } catch (error) {\n      console.error('Error initializing terminal:', error);\n      return () => {};\n    }\n  }, []);\n\n  useEffect(() => {\n    const terminal = xtermRef.current;\n    if (!terminal || !isReady) return;\n\n    if (isExecuting) {\n      terminal.clear();\n      terminal.writeln('\\x1b[33m⟳ Executing code...\\x1b[0m');\n      terminal.writeln('');\n    } else if (executionOutput) {\n      terminal.clear();\n\n      // Status indicator\n      const statusColor = executionOutput.status === 'completed' ? '32' : '31';\n      const statusText = executionOutput.status === 'completed' ? '✓' : '✗';\n      terminal.writeln(`\\x1b[${statusColor}m${statusText} Execution ${executionOutput.status}\\x1b[0m`);\n      terminal.writeln('');\n\n      // Output\n      if (executionOutput.output?.stdout) {\n        terminal.writeln('\\x1b[36m[Output]\\x1b[0m');\n        terminal.writeln(executionOutput.output.stdout);\n      }\n\n      // Errors\n      if (executionOutput.output?.stderr) {\n        terminal.writeln('\\x1b[31m[Error]\\x1b[0m');\n        terminal.writeln(executionOutput.output.stderr);\n      }\n\n      if (executionOutput.output?.error) {\n        terminal.writeln('\\x1b[31m[System Error]\\x1b[0m');\n        terminal.writeln(executionOutput.output.error);\n      }\n\n      if (executionOutput.output?.compileOutput) {\n        terminal.writeln('\\x1b[33m[Compilation]\\x1b[0m');\n        terminal.writeln(executionOutput.output.compileOutput);\n      }\n\n      // Performance metrics\n      terminal.writeln('');\n      if (executionOutput.executionTime !== undefined) {\n        terminal.writeln(\n          `\\x1b[90mExecution time: ${executionOutput.executionTime}ms\\x1b[0m`\n        );\n      }\n\n      if (executionOutput.memoryUsed) {\n        terminal.writeln(\n          `\\x1b[90mMemory used: ${(executionOutput.memoryUsed / 1024).toFixed(2)} KB\\x1b[0m`\n        );\n      }\n\n      // Mode indicators\n      if (executionOutput.local) {\n        terminal.writeln('');\n        terminal.writeln('\\x1b[32m✓ Running with local Node.js/Python\\x1b[0m');\n      } else if (executionOutput.mock) {\n        terminal.writeln('');\n        terminal.writeln('\\x1b[33m⚠ Running in mock mode - Judge0 API not configured\\x1b[0m');\n      }\n\n      terminal.writeln('');\n      terminal.writeln('\\x1b[90m' + '─'.repeat(50) + '\\x1b[0m');\n    }\n  }, [executionOutput, isExecuting, isReady]);\n\n  return (\n    <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column', bgcolor: '#1e1e1e' }}>\n      <Box\n        sx={{\n          p: 1,\n          borderBottom: '1px solid #2d2d2d',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between'\n        }}\n      >\n        <Typography variant=\"subtitle2\" sx={{ color: '#9e9e9e', fontWeight: 500 }}>\n          TERMINAL\n        </Typography>\n      </Box>\n      <Box\n        ref={terminalRef}\n        sx={{\n          flexGrow: 1,\n          p: 1,\n          bgcolor: '#1e1e1e',\n          overflow: 'hidden',\n          '& .xterm': { height: '100%', width: '100%' },\n          '& .xterm-viewport': { overflow: 'hidden' }\n        }}\n      />\n    </Box>\n  );\n};\n\nexport default Terminal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}