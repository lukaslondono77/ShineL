{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: `${API_URL}/api`,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Handle response errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Unauthorized - clear token and redirect to login\n    localStorage.removeItem('token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Function to get the full URL for images and files\nexport const getFileUrl = filePath => {\n  if (!filePath) return '';\n\n  // If it's already a full URL, return as is\n  if (filePath.startsWith('http://') || filePath.startsWith('https://')) {\n    return filePath;\n  }\n\n  // If it starts with /, it's a relative path, prepend the API URL\n  if (filePath.startsWith('/')) {\n    return `${API_URL}${filePath}`;\n  }\n\n  // Otherwise, assume it's a relative path and prepend the API URL with /\n  return `${API_URL}/${filePath}`;\n};\nexport { API_URL };\nexport default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","getFileUrl","filePath","startsWith"],"sources":["/Users/lukasygina/image-share-app-1/client/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5001';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: `${API_URL}/api`,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Handle response errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    if (error.response?.status === 401) {\n      // Unauthorized - clear token and redirect to login\n      localStorage.removeItem('token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// Function to get the full URL for images and files\nexport const getFileUrl = (filePath) => {\n  if (!filePath) return '';\n  \n  // If it's already a full URL, return as is\n  if (filePath.startsWith('http://') || filePath.startsWith('https://')) {\n    return filePath;\n  }\n  \n  // If it starts with /, it's a relative path, prepend the API URL\n  if (filePath.startsWith('/')) {\n    return `${API_URL}${filePath}`;\n  }\n  \n  // Otherwise, assume it's a relative path and prepend the API URL with /\n  return `${API_URL}/${filePath}`;\n};\n\nexport { API_URL };\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;;AAExE;AACA,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAE,GAAGN,OAAO,MAAM;EACzBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACrD;EACA,OAAOD,MAAM;AACf,CAAC,EACAI,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAX,GAAG,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC1BQ,QAAQ,IAAKA,QAAQ,EACrBH,KAAK,IAAK;EAAA,IAAAI,eAAA;EACT,IAAI,EAAAA,eAAA,GAAAJ,KAAK,CAACG,QAAQ,cAAAC,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC;IACAP,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;EACjC;EACA,OAAOR,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACA,OAAO,MAAMU,UAAU,GAAIC,QAAQ,IAAK;EACtC,IAAI,CAACA,QAAQ,EAAE,OAAO,EAAE;;EAExB;EACA,IAAIA,QAAQ,CAACC,UAAU,CAAC,SAAS,CAAC,IAAID,QAAQ,CAACC,UAAU,CAAC,UAAU,CAAC,EAAE;IACrE,OAAOD,QAAQ;EACjB;;EAEA;EACA,IAAIA,QAAQ,CAACC,UAAU,CAAC,GAAG,CAAC,EAAE;IAC5B,OAAO,GAAG3B,OAAO,GAAG0B,QAAQ,EAAE;EAChC;;EAEA;EACA,OAAO,GAAG1B,OAAO,IAAI0B,QAAQ,EAAE;AACjC,CAAC;AAED,SAAS1B,OAAO;AAChB,eAAeI,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}